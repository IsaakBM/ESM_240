[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ESM240 – Climate Change Biology: From Models to Applications",
    "section": "",
    "text": "Preface\nThis eBook was written and compiled by Isaac Brito-Morales (ibrito@conservation.org) as part of the Climate Change Biology module within the ESM240 course.\nThe goal is simple: to help students and early-career scientists navigate the world of climate models — not to turn them into modelers, but to make sure they know where to find information, how to use it responsibly, and how to interpret it within an ecological and conservation context.\nAll code and examples are provided for educational purposes.\nPlease don’t distribute or reuse them without permission.\n\n\n\n\n\n\n⚠ Disclaimer\n\n\n\n\n\nNo guarantees that every line of code will run perfectly — as one of my mentors used to say, “that’s what learning (and debugging) is for.”",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "01_preparation.html",
    "href": "01_preparation.html",
    "title": "1  Welcome!",
    "section": "",
    "text": "1.1 Open Science: NCEAS\nWith this material, we are following the NCEAS data approach to make research more transparent and reproducible, which enhances the credibility, utility, and accuracy of the science used to solve global challenges.\nOpen science is the philosophy and practice of making data and methods accessible, replicable, and free to use, typically through computer programming tools and techniques. It helps researchers compile and analyze data more efficiently and identify solutions more quickly.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Welcome!</span>"
    ]
  },
  {
    "objectID": "02_set_up.html",
    "href": "02_set_up.html",
    "title": "2  Setting up your computer",
    "section": "",
    "text": "2.1 R\nThe R statistical computing environment is the core tool we’ll use for data exploration and visualization in this course. You can download the latest version of R (version 4.2.3) from the Comprehensive R Archive Network (CRAN).\nMake sure you download the correct installer for your operating system — Windows, macOS, or Linux. Once installed, you’ll be ready to connect it with RStudio, the interface we’ll use throughout the course.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Setting up your computer</span>"
    ]
  },
  {
    "objectID": "02_set_up.html#rstudio",
    "href": "02_set_up.html#rstudio",
    "title": "2  Setting up your computer",
    "section": "2.2 RStudio",
    "text": "2.2 RStudio\nRStudio is an integrated development environment (IDE) — essentially, the workspace where you’ll write and run your R code. It makes coding more organized and interactive, combining the console, scripts, plots, and files all in one place.\nYou can download the latest version of RStudio here. Once installed, open RStudio and explore its main interface — you’ll find a console to run commands, a panel for your scripts, and other tabs for plots, files, and packages.\n\n\n\n\n\n\n\n\n\nYou can type R code into the Console and press the enter key to run code.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Setting up your computer</span>"
    ]
  },
  {
    "objectID": "02_set_up.html#r-packages",
    "href": "02_set_up.html#r-packages",
    "title": "2  Setting up your computer",
    "section": "2.3 R packages",
    "text": "2.3 R packages\nAn R package is a collection of code, data, and documentation that extends what R can do. There are now thousands of packages on CRAN, covering everything from basic statistics to machine learning and climate modeling.\nIn this course, we’ll only use a small handful — just enough to explore, visualize, and handle climate data efficiently. You’ll see that most R workflows build on the same few “core” packages, so getting comfortable with these will serve you well beyond this class.\n\n\n\n\n\n\nNavigating R\n\n\n\nBecause the R ecosystem is so extensive, the question is almost never “can I do this in R?” but rather “which package should I use to do it?”\n\n\nTo install the required packages, copy and paste the code below into the Console in RStudio, then press Enter. You’ll need an internet connection, and the installation may take a few minutes.\n\n# Core packages for this course\ninstall.packages(c(\n  \"terra\",         # raster and vector data\n  \"sf\",            # spatial data manipulation\n  \"dplyr\",         # data wrangling\n  \"ggplot2\",       # plotting and visualization\n  \"maps\",          # quick \"dirty\" plot\n))\n\n\n\n\n\n\n\nCaution\n\n\n\nIf you already have some of these installed, R will skip them automatically. No need to reinstall everything from scratch.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Setting up your computer</span>"
    ]
  },
  {
    "objectID": "02_set_up.html#optional-create-an-r-project",
    "href": "02_set_up.html#optional-create-an-r-project",
    "title": "2  Setting up your computer",
    "section": "2.4 (Optional) Create an R Project",
    "text": "2.4 (Optional) Create an R Project\nFor those who want to stay extra organized, you can set up an R Project. An R Project connects directly to a folder on your computer, keeping your scripts, data, and outputs neatly contained in one place.\nUsing an R Project is a good habit for reproducible research — it keeps your workflow clean and avoids the classic “where did I save that file?” problem. Everything you do — data cleaning, analysis, and plotting — stays inside a single self-contained folder.\n\n\n\n\n\n\nExample: Setting up an R Project\n\n\n\n\nIn the File menu, choose New Project\n\nSelect New Directory\n\nClick New Project\n\nUnder Directory name, type: esm_240_{USERNAME}\n\nLeave Create Project as subdirectory of: set to ~ (your home folder)\n\nClick Create Project\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIf you already have your own folder system that works for you — that’s fine too.\nThis step is optional, but it can make life easier, especially when you start juggling multiple datasets or assignments.\n\n\n\n2.4.1 Paths 101: How R Knows Where to Look\nIf you’re new to coding or file systems, this is worth a quick read — it’ll save you a lot of confusion later on!\nEvery file on your computer has a path, which tells R where to find it.\nThere are two main types:\n\nAbsolute path: starts from the very top (root) of your computer’s file system.\nExample: /Users/ibrito/Desktop/esm_240/\nRelative path: starts from your current working directory — basically, the folder R is “looking at” right now.\nExample: data/my_file.csv (relative to where your project lives)\n\n\n\n\n\n\n\nImportant\n\n\n\nWhen you work inside an R Project, RStudio automatically sets your working directory to that project’s folder.\nThat means your relative paths will just work — no need to manually tell R where to look.\n\n\n\n\n\n\n\n\nDitch the setwd()\n\n\n\n\n\nOnce you start using R Projects, you should almost never need to use setwd().\nIf you find yourself typing it, pause and ask why — chances are, there’s a cleaner way to organize your files.\n(Think of it as the “Ctrl + Z” of reproducibility — best avoided if you can.)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Setting up your computer</span>"
    ]
  },
  {
    "objectID": "03_cmip6_models.html",
    "href": "03_cmip6_models.html",
    "title": "3  Understanding Climate Models: The CMIP Framework",
    "section": "",
    "text": "3.1 What is a climate model? (in one picture)\nAt its core, a climate model divides the Earth into a 3-D grid (latitude–longitude horizontally, levels vertically) and steps forward in time. In each grid cell the model tracks key state variables (e.g., temperature, humidity, winds, ocean currents, salinity, sea ice, carbon), and exchanges fluxes (heat, water, carbon) between neighboring cells and across components (atmosphere ↔︎ ocean ↔︎ land ↔︎ ice).\nWhy many models? Different groups make different (reasonable) choices in numerics and physics, so we compare them within the CMIP framework (Schoeman et al. 2023).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Understanding `Climate Models`: The `CMIP` Framework</span>"
    ]
  },
  {
    "objectID": "03_cmip6_models.html#what-is-a-climate-model-in-one-picture",
    "href": "03_cmip6_models.html#what-is-a-climate-model-in-one-picture",
    "title": "3  Understanding Climate Models: The CMIP Framework",
    "section": "",
    "text": "Resolution: Typical global models use ~1° (~100 km) horizontal grids with tens of vertical levels\nComponents: Many models are full Earth System Models (ESMs) that include biogeochemistry (e.g., carbon cycle), not just physics\nOutputs: Results are multi-dimensional arrays saved as NetCDF files (variable × lon × lat × depth × time)\n\n\n\n\n\n\n\n\nNote\n\n\n\nProjection, not prediction: Models run “what-if” scenarios (e.g., different emissions pathways). They tell us about plausible futures, not a single forecast for an exact day.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Understanding `Climate Models`: The `CMIP` Framework</span>"
    ]
  },
  {
    "objectID": "03_cmip6_models.html#what-the-hell-are-cmip6",
    "href": "03_cmip6_models.html#what-the-hell-are-cmip6",
    "title": "3  Understanding Climate Models: The CMIP Framework",
    "section": "3.2 What the hell are CMIP6?",
    "text": "3.2 What the hell are CMIP6?\nCMIP6 stands for Coupled Model Intercomparison Project – Phase 6.\nThese are large-scale simulations of the Earth system that bring together dozens of research centers around the world. Each model represents the physical, chemical, and, in some cases, biological processes of our planet’s atmosphere, oceans, land, and cryosphere — the “big four” of climate (Schoeman et al. 2023)\nThe IPCC Fifth Assessment Report (AR5, 2013) was based on CMIP5, while the Sixth Assessment Report (AR6, 2021) uses CMIP6, which offers improved spatial resolution, new biogeochemical modules, and more realistic feedbacks among Earth-system components.\nThe main goal of CMIP is to explore plausible futures of the climate system under different greenhouse-gas and aerosol trajectories. Each model run represents a “what-if” experiment — what if emissions rise, stabilize, or decline?\n\n\n\n\n\n\nWhy CMIP matters (and why we spent a year writing about it)\n\n\n\nCMIP models underpin nearly every modern climate projection — from future sea-surface warming to biodiversity redistribution.\nIf you’ve ever used temperature or oxygen projections in ecology, you’ve indirectly used CMIP data.\n(And yes — this section owes more than a little to that friendly review “Demystifying global climate models for use in the life sciences” – which some of us may have helped write)\n\n\nThe CMIP framework is not a single model, but a community experiment that standardizes how models are run and shared, ensuring that scientists can compare results across modeling centers. These datasets are freely distributed through the Earth System Grid Federation (ESGF), which makes them available for research and teaching.\n\n\n\n\n\n\nThe CMIP6 “MIPs Wheel”\n\n\n\nCMIP6 isn’t a single climate model — it’s a huge international collaboration that brings together more than 100 models from research centers around the world. These models are grouped into Model Intercomparison Projects (MIPs), each focused on a big scientific question — for example:\nHow do aerosols affect clouds? How does the ocean store heat and carbon? What happens under different future scenarios?\nAt the center of the diagram below are a few core experiments that all models run to make results comparable. The outer circles show the different MIPs, each exploring a specific part of the Earth system.\n\n\n\n\n\n\n\n\n\nCMIP6 is what makes global climate projections possible — it provides a common framework so that results can be compared, validated, and used confidently in applied fields like ecology and conservation.\nAs we explain in (Schoeman et al. 2023), the system might look complicated, but it’s what lets us link global climate science to questions about where and how species — and ecosystems — will respond to change.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Understanding `Climate Models`: The `CMIP` Framework</span>"
    ]
  },
  {
    "objectID": "03_cmip6_models.html#cmip6-experimental-design-climate-scenarios",
    "href": "03_cmip6_models.html#cmip6-experimental-design-climate-scenarios",
    "title": "3  Understanding Climate Models: The CMIP Framework",
    "section": "3.3 CMIP6 Experimental Design: Climate Scenarios",
    "text": "3.3 CMIP6 Experimental Design: Climate Scenarios\nClimate models explore possible futures — not predictions, but scenarios that describe how society might develop and how that would influence greenhouse gas emissions.\nIn CMIP5, these were called RCPs (Representative Concentration Pathways)\nIn CMIP6, they evolved into SSPs — Shared Socioeconomic Pathways — which combine both human and physical dimensions of climate change\n\n\n\n\n\n\n\n\n\nEach SSP represents a different world:\n\nSSP1 – Sustainability: a “green road” with strong climate action\nSSP2 – Middle of the Road: current trends continue\nSSP3 – Regional Rivalry: fragmented world, high emissions\nSSP4 – Inequality: growing divide between rich and poor regions\nSSP5 – Fossil-fueled Development: rapid economic growth, very high emissions\n\nWhen these socioeconomic pathways are combined with different levels of radiative forcing (how much energy the atmosphere traps), we can simulate a wide range of future climates.\n\n\n\n\n\n\n\n\n\nAs shown above, temperature projections under the SSPs diverge sharply by mid-century.\nFor example, SSP1-2.6 keeps warming below 2 °C, while SSP5-8.5 exceeds 4 °C by 2100 — a reminder that the choices societies make now shape the climate future we’ll experience.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Understanding `Climate Models`: The `CMIP` Framework</span>"
    ]
  },
  {
    "objectID": "03_cmip6_models.html#downloading-cmip6-model-data",
    "href": "03_cmip6_models.html#downloading-cmip6-model-data",
    "title": "3  Understanding Climate Models: The CMIP Framework",
    "section": "3.4 Downloading CMIP6 Model Data",
    "text": "3.4 Downloading CMIP6 Model Data\nIn this section, you’ll learn how to find and download real climate model outputs from CMIP6 — the same datasets used by the IPCC in its latest assessment reports.\nThese files will form the foundation for your assignment, where you’ll visualize and analyze global sea surface temperature (tos) under a future climate scenario.\n\n\n3.4.1 1. Create an ESGF Account\nCMIP6 data are freely available through the Earth System Grid Federation (ESGF) — a global network of data centers that archive Earth System Model outputs.\nTo download data, create an account following the official guide: https://esgf.github.io/esgf-user-support/user_guide.html.\n(You can browse without logging in, but you’ll need an account to download)\n\n\n\n3.4.2 2. Navigating the Metagrid Interface\nOpen the Metagrid UI: https://aims2.llnl.gov/.\nThis is a modern, user-friendly front end to ESGF that lets you browse CMIP6 data using filters.\n\n\n\n\n\n\n\n\n\nMetagrid UI: https://aims2.llnl.gov/ organizes CMIP6 data into facets (filters) such as model name, variable, frequency, and scenario.\n\n\n3.4.3 3. Navigating the Metagrid Interface\n\n\n\n\n\n\n\n\nComponent\nWhat it means\nExample\n\n\n\n\nActivity ID\nThe experiment group (e.g., ScenarioMIP)\nScenarioMIP\n\n\nSource ID\nThe model/institution\nGFDL-ESM4\n\n\nExperiment ID\nThe scenario (historical, ssp585, etc.)\nssp585\n\n\nVariant Label\nThe ensemble member (run configuration)\nr1i1p1f1\n\n\nFrequency\nTime resolution\nmon\n\n\nRealm\nEarth-system component\nocean\n\n\n\n\n\n3.4.4 4. Navigating the Metagrid Interface\nUse the filters in the left panel. For this exercise, select:\n\nVariable ID: tos (sea surface temperature)\nRealm: ocean\nTable ID: Omon (monthly ocean outputs)\nFrequency: mon\nExperiment ID: ssp585 (future high-emission scenario)\nVariant Label: r1i1p1f1 (standard ensemble run)\nSource ID: GFDL-ESM4 (NOAA model)\n\n\n\n\n\n\n\n\n\n\nYou should now see a list of model outputs matching your filters. Each row corresponds to one model run for a specific scenario and variable.\n\n\n3.4.5 5. Understanding File Names\nCMIP6 files follow a standard naming convention, e.g.: tos_Omon_GFDL-ESM4_ssp585_r1i1p1f1_gr_201501-203412.nc\n\n\n\nPart\nMeaning\n\n\n\n\ntos\nSea surface temperature\n\n\nOmon\nMonthly ocean output\n\n\nGFDL-ESM4\nModel name\n\n\nssp585\nFuture scenario (high emissions)\n\n\nr1i1p1f1\nEnsemble member (run/physics/forcing setup)\n\n\ngr\nGrid label (regridded)\n\n\n201501–203412\nTime period covered\n\n\n\n\n\n3.4.6 6. Downloading the File\n\nClick List Files next to your chosen model entry.\nA table will list several .nc files, each covering ~20 years.\nClick HTTP Download for one file (e.g., 2015–2034).\n\n\n\n\n\n\n\n\n\n\nEach file is ~130 MB. Do not download all time periods — one file is enough for this assignment.\n\n\n\n\n\n\nAssignment Hint\n\n\n\nUse this setup: - Model: GFDL-ESM4 - Scenario: ssp585 - Variable: tos (sea surface temperature) - Period: 2015–2034 You’ll use this file in the next section to open, visualize, and analyze global SST in R. Pro tip: Start filtering by variable — it’s the quickest way to narrow the search.\n\n\n\n\n\n\n\n\nAssignment Hint\n\n\n\n\n\nNo downloads? Make sure you’re logged into ESGF.\nEmpty results? Clear filters and re-apply Variable → tos first.\nSlow/failed download? Try another ESGF node mirror listed under “Download Options”\n\n\n\n\n\n\n\nSchoeman, David S., Alex Sen Gupta, Cheryl S. Harrison, Jason D. Everett, Isaac Brito-Morales, Lee Hannah, Laurent Bopp, Patrick R. Roehrdanz, and Anthony J. Richardson. 2023. “Demystifying Global Climate Models for Use in the Life Sciences.” Trends in Ecology & Evolution, May. https://doi.org/10.1016/j.tree.2023.04.005.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Understanding `Climate Models`: The `CMIP` Framework</span>"
    ]
  },
  {
    "objectID": "05_ncRaster.html",
    "href": "05_ncRaster.html",
    "title": "4  From NetCDF to a Map in R",
    "section": "",
    "text": "4.1 CMIP6 data, explained in 10 minutes",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>From `NetCDF` to a Map in `R`</span>"
    ]
  },
  {
    "objectID": "05_ncRaster.html#cmip6-data-explained-in-10-minutes",
    "href": "05_ncRaster.html#cmip6-data-explained-in-10-minutes",
    "title": "4  From NetCDF to a Map in R",
    "section": "",
    "text": "4.1.1 What is NetCDF (and why CMIP6 uses it)?\nNetCDF is a container for scientific arrays (e.g., temperature) plus dimensions (lon, lat, depth, time) and metadata (units, CF names).\nCMIP6 outputs are saved as NetCDF because it’s compact and self-describing. We won’t cover NetCDF internals here—think of it as the standard file you download and open.\n\n\n\n\n\n\n\n\n\n\n\n4.1.2 What is a raster (in R)?\nA raster is how gridded data are handled in R (via {terra}): it’s what you plot, crop, reproject, and compute on.\nIn one line: NetCDF is the storage format; a raster is how we work with it in R.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>From `NetCDF` to a Map in `R`</span>"
    ]
  },
  {
    "objectID": "05_ncRaster.html#load-libraries",
    "href": "05_ncRaster.html#load-libraries",
    "title": "4  From NetCDF to a Map in R",
    "section": "4.2 Load libraries",
    "text": "4.2 Load libraries\n\nlibrary(terra)\nlibrary(maps)\n\n\nLoad the NetCDF file\n\n\n# Change this to YOUR downloaded file\nf &lt;- \"path/to/your/tos_Omon_GFDL-ESM4_ssp585_r1i1p1f1_gr_201501-203412.nc\"\n\n# Lazy connection to the NetCDF file (does not load everything into memory)\nr &lt;- rast(f)\n\n\nDetect the variable\n\n\n# Short variable name(s) in the NetCDF (e.g., \"tos\", \"thetao\", etc.)\nvn &lt;- tryCatch(terra::varnames(r), error = function(e) NA_character_)\n# Use the first variable stack in the file (keeps this example generic)\nr_var &lt;- r[[1]]\n\n\nPrint key metadata (model, scenario, ensemble, units, resolution)\n\n\ncat(\"\\n================== METADATA ==================\\n\")\nprint(r)\n\n# Parse common CMIP6 filename parts\nfname   &lt;- basename(f)\nparts   &lt;- unlist(strsplit(fname, \"_\"))\n\nmodel    &lt;- if (length(parts) &gt;= 3) parts[3] else NA_character_\nscenario &lt;- if (length(parts) &gt;= 4) parts[4] else NA_character_\nensemble &lt;- if (length(parts) &gt;= 5) parts[5] else NA_character_\n\n# Units may not always be present—handle gracefully\nu &lt;- tryCatch(units(r_var)[1], error = function(e) \"unknown\")\n\ncat(\"\\nModel name:\", model,\n    \"\\nEnsemble member:\", ensemble,\n    \"\\nScenario:\", scenario,\n    \"\\nNative resolution (lon x lat, degrees):\", paste(terra::res(r_var), collapse = \" x \"),\n    \"\\nVariable name(s):\", if (is.null(vn)) \"unknown\" else paste(vn, collapse = \", \"),\n    \"\\nVariable units:\", u,\n    \"\\n=============================================\\n\\n\")\n\n\nPlot: first time slice (quick look)\n\n\n# If a time dimension exists, take the first layer\nif (nlyr(r_var) &gt; 1) r_var &lt;- r_var[[1]]\n\n# Rotate longitudes to [-180, 180] for a clean world map\nr_plot &lt;- terra::rotate(r_var)\n\n# Try to extract a timestamp (may be NULL depending on file)\ntstamp &lt;- tryCatch(as.character(terra::time(r_plot)[1]), error = function(e) \"\")\n\n# Save a quick PNG to your project folder\npng(\"quick_var.png\", width = 1000, height = 600, res = 120)\nplot(r_plot, main = paste(\"Quick Plot -\", ifelse(is.null(vn), \"variable\", vn[1]), tstamp))\nmaps::map(\"world\", add = TRUE)\ndev.off()\n\n\nCompute a global mean (first time slice)\n\n\nmean_val &lt;- terra::global(r_plot, \"mean\", na.rm = TRUE)[[1]]\n\ncat(\"Variable plotted:\", ifelse(is.null(vn), \"unknown\", vn[1]), \"\\n\")\ncat(\"Global mean value (first time step):\", round(mean_val, 3), u, \"\\n\")\ncat(\"PNG saved:\", normalizePath(\"quick_var.png\"), \"\\n\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>From `NetCDF` to a Map in `R`</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Schoeman, David S., Alex Sen Gupta, Cheryl S. Harrison, Jason D.\nEverett, Isaac Brito-Morales, Lee Hannah, Laurent Bopp, Patrick R.\nRoehrdanz, and Anthony J. Richardson. 2023. “Demystifying Global\nClimate Models for Use in the Life Sciences.” Trends in\nEcology & Evolution, May. https://doi.org/10.1016/j.tree.2023.04.005.",
    "crumbs": [
      "References"
    ]
  }
]